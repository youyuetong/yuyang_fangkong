{"remainingRequest":"/Volumes/work/Graduation_project/yab/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/work/Graduation_project/yab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/work/Graduation_project/yab/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/work/Graduation_project/yab/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Volumes/work/Graduation_project/yab/src/views/Home.vue","mtime":1614072687686},{"path":"/Volumes/work/Graduation_project/yab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/work/Graduation_project/yab/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/work/Graduation_project/yab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/work/Graduation_project/yab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}